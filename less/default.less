/*
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
*/
/* 
    Created on : Jul 23, 2014, 9:44:58 AM
    Author     : WesKing
*/
@lightBlue: #ddf;
@lightRed: #fdd;
@darkBlue:desaturate(darken(blue, 10%), 20%);
@defaultShapesWidth: 200px;

@defaultThemeColor: @lightBlue;
@boxWidth: 200px;
@triangleWidth: @boxWidth * 0.1;
@fullTriangleWidth: @triangleWidth * 1.3;
@foldoutTriangleWidth: @boxWidth / 2;

.shape {
    &:hover {
        background: @lightRed;
    }
    padding-right: @triangleWidth;
    padding-left: 5px;
    padding-bottom: 5px;
    padding-top: 5px;
    display: block;
    float: left;
    width: @boxWidth;
    background: @defaultThemeColor;
    margin: 20px;
    position: relative;
    z-index: 0;
}
.leaf {
    position: absolute;
    top: 0px;
    right: 0px;
    .triangle(TR, @triangleWidth, blue);
    transition: border 0.15s ease-in-out;
    &:hover {
        .triangle(TR, @fullTriangleWidth, @darkBlue);
    }
}

.leaf-full {
    position: absolute;
    top: 0px;
    right: 0px;
    .triangle(TR, @triangleWidth, blue);
    transition: border 0.15s ease-in-out;
    &:hover {
        .triangle(All, @foldoutTriangleWidth, @darkBlue);
    }
}

.triangle-base() {
    content: '';
    display: block;
    width: 0;
    height: 0;
    margin: 5px;
    z-index: 100;
    //position: relative;
}

.triangle(@direction, @size, @color) {
    .triangle(@direction, @size * 2, @size, @color);
}

.triangle(@direction, @width, @height, @color) when (@direction = B) {
    .triangle-base();
    border-left: (@width / 2)solid transparent;
    border-right: (@width / 2)solid transparent;
    
    border-bottom: @height solid @color;
}

.triangle(@direction, @width, @height, @color) when (@direction = T) {
    .triangle-base();
    border-left: (@width / 2) solid transparent;
    border-right: (@width / 2) solid transparent;
    
    border-top: @height solid @color;
}

.triangle(@direction, @width, @height, @color) when (@direction = R) {
    .triangle-base();
    border-top: (@width / 2) solid transparent;
    border-bottom: (@width / 2) solid transparent;
    
    border-right: @height solid @color;
}

.triangle(@direction, @width, @height, @color) when (@direction = L) {
    .triangle-base();
    border-top: (@width / 2) solid transparent;
    border-bottom: (@width / 2) solid transparent;
    
    border-left: @height solid @color;
}

.triangle(@direction, @width, @height, @color) when (@direction = TB) {
    .triangle-base();
    border-left: (@width / 2)solid transparent;
    border-right: (@width / 2)solid transparent;
    
    border-bottom: @height solid @color;
    border-top: @height solid @color;
}

.triangle(@direction, @width, @height, @color) when (@direction = LR) {
    .triangle-base();
    border-top: (@width / 2) solid transparent;
    border-bottom: (@width / 2) solid transparent;
    
    border-left: @height solid @color;
    border-right: @height solid @color;
}

.triangle(@direction, @width, @height, @color) when (@direction = BR) {
    .triangle-base();
    border-left: (@width / 2) solid transparent;
    border-top: (@width / 2) solid transparent;
    
    border-right: @height solid @color;
    border-bottom: @height solid @color;
}

.triangle(@direction, @width, @height, @color) when (@direction = BL) {
    .triangle-base();
    border-top: (@width / 2) solid transparent;
    border-right: (@width / 2) solid transparent;
    
    border-left: @height solid @color;
    border-bottom: @height solid @color;
}

.triangle(@direction, @width, @height, @color) when (@direction = TR) {
    .triangle-base();
    border-left: (@width / 2) solid transparent;
    border-bottom: (@width / 2) solid transparent;
    
    border-right: @height solid @color;
    border-top: @height solid @color;
}

.triangle(@direction, @width, @height, @color) when (@direction = TL) {
    .triangle-base();
    border-right: (@width / 2) solid transparent;
    border-bottom: (@width / 2) solid transparent;
    
    border-left: @height solid @color;
    border-top: @height solid @color;
}

.triangle(@direction, @width, @height, @color) when (@direction = All) {
    .triangle-base();
    border-bottom: @height solid @color;
    border-right: @height solid @color;    
    border-left: @height solid @color;
    border-top: @height solid @color;
}